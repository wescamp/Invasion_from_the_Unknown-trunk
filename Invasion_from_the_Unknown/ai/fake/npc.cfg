#textdomain wesnoth-Invasion_from_the_Unknown

# wmlindent: start ignoring
#define NPC_BIRD_UNIT_TYPES
Crow,Falcon,Shaxthal Razorbird,Shaxthal Thunderbird,Shaxthal Wyrm#enddef
# wmlindent: stop ignoring

#define IS_NPC
    {IDLE_AI_ALGORITHM}
#enddef

#define IS_HOSTILE_NPC
    [ai]
        aggression=1.0
        leader_value=0
        village_value=0
        protect_leader=0
        grouping=no
        caution=0.0
        simple_targetting=yes
    [/ai]
#enddef

#define NPC_SIDE SIDE
    [side]
        colour={COLOR_PINK}
        gold=0
        income=-2
        recruit=
        side={SIDE}
        controller=ai
        {IS_NPC}
        no_leader=yes
        team_name=npc_team
    [/side]
#enddef

#define NPC_HOSTILE_SIDE SIDE
    [side]
        side={SIDE}
        controller=ai
        [ai]
            #makes them focus on the player
            [target]
                side=1
                value=5
            [/target]
            aggression=1.0
            leader_value=0
            village_value=0
            protect_leader=0
            grouping=no
            caution=0.1
            simple_targetting=yes
        [/ai]
        no_leader=yes
        team_name=npc_team
    [/side]
#enddef

#define NPC TYPE X Y SIDE
    {RANDOM "n,s,ne,nw,se,sw"}
    [unit]
        generate_name=no
        type={TYPE}
        x,y={X},{Y}
        side={SIDE}
        ai_special=guardian
        facing=$random
        random_traits=yes
        random_gender=yes
    [/unit]
    {CLEAR_VARIABLE random}
#enddef

#define __NPCSUB_SCAN_BOUND __BOUND __V
    {VARIABLE_FROM_STRLEN NPC_{__BOUND}_size {__V}}

    [if]
        {VARIABLE_NUM_NOT_EQUALS NPC_{__BOUND}_size 0}
        [then]
            {VARIABLE NPC_boundaries.{__BOUND} {__V}}
        [/then]
    [/if]

    {CLEAR_VARIABLE NPC_{__BOUND}_size}
#enddef

# wmlindent: start ignoring
#define __NPC_BEGIN_SIDE_EVENT SIDE
    [event]
        name=turn refresh
        first_time_only=no
        [if]
            {VARIABLE_NUM_EQUALS side_number {SIDE} }
            [then]
#enddef

#define __NPC_END_SIDE_EVENT
            [/then]
        [/if]
    [/event]
#enddef
# wmlindent: stop ignoring
# wmlindent: opener "{__NPC_BEGIN_SIDE_EVENT"
# wmlindent: closer "{__NPC_END_SIDE_EVENT"

#define __NPC_INIT_BOUNDARIES LEFT RIGHT TOP BOTTOM
    [store_map_dimensions]
        variable=NPC_map_info
    [/store_map_dimensions]

    [set_variables]
        mode=replace
        name=NPC_boundaries
        [value]
            left,top=1,1
            right=$NPC_map_info.width
            bottom=$NPC_map_info.height
        [/value]
    [/set_variables]

    {__NPCSUB_SCAN_BOUND left   {LEFT}}
    {__NPCSUB_SCAN_BOUND top    {TOP}}
    {__NPCSUB_SCAN_BOUND right  {RIGHT}}
    {__NPCSUB_SCAN_BOUND bottom {BOTTOM}}

    {CLEAR_VARIABLE "NPC_map_info"}
#enddef

#define NPC_BIRD_BEHAVIOR SIDE LEFT RIGHT TOP BOTTOM
    {__NPC_BEGIN_SIDE_EVENT {SIDE}}
        {__NPC_INIT_BOUNDARIES  ({LEFT}) ({RIGHT}) ({TOP}) ({BOTTOM})}

        [store_unit]
            mode=always_clear
            [filter]
                type={NPC_BIRD_UNIT_TYPES}
                side={SIDE}
            [/filter]
            variable=NPC_birds
            kill=no
        [/store_unit]
        # Sanity checks go first; make sure that in the real bird movement [if] block we are not
        # going to place an unit out of the move area boundaries!
        {LOG_IFTU "<NPC> found $NPC_birds.length birds for sanity checking"}
        {FOREACH NPC_birds i}
            [if]
                {VARIABLE_NUM_GREATER_OR_EQUAL_THAN  NPC_birds[$i].x  $NPC_boundaries.right  }

                [or]
                    {VARIABLE_NUM_LESS_OR_EQUAL_THAN     NPC_birds[$i].x  $NPC_boundaries.left   }
                [/or]
                [or]
                    {VARIABLE_NUM_LESS_OR_EQUAL_THAN     NPC_birds[$i].y  $NPC_boundaries.top    }
                [/or]
                [or]
                    {VARIABLE_NUM_GREATER_OR_EQUAL_THAN  NPC_birds[$i].y  $NPC_boundaries.bottom }
                [/or]
                [then]
                    {LOG_IFTU "<NPC> killing $NPC_birds[$i].id| (side $NPC_birds[$i].side|) to prevent invalid unit positioning"}
                    [kill]
                        id=$NPC_birds[$i].id
                        side=$NPC_birds[$i].side
                        fire_event=yes
                        animate=no
                    [/kill]
                [/then]
            [/if]
        {NEXT i}

        # Refresh list of NPC birds with the above changes
        [store_unit]
            mode=always_clear
            [filter]
                type={NPC_BIRD_UNIT_TYPES}
                side={SIDE}
            [/filter]
            variable=NPC_birds
            kill=no
        [/store_unit]

        {LOG_IFTU "<NPC> found $NPC_birds.length birds for artificial AI behavior process"}

        {FOREACH NPC_birds i}
            {LOG_IFTU "<NPC> entering fake AI procedure: $NPC_birds[$i].id (side $NPC_birds[$i].side|)"}
            [if]
                {VARIABLE_NUM_GREATER_THAN NPC_birds[$i].moves 0}
                [then]
                    {RANDOM "n,s,ne,nw,se,sw"}

                    {LOG_IFTU "<NPC> RNG threw movement direction '$random|'"}

                    {VARIABLE NPC_temp_movepath_x "$NPC_birds[$i].x"}
                    {VARIABLE NPC_temp_movepath_y "$NPC_birds[$i].y"}

                    {VARIABLE j     0                   }
                    {VARIABLE j_max $NPC_birds[$i].moves}

                    {LOG_IFTU "<NPC> entering movement loop"}
                    {LOG_IFTU "<NPC> bird movement limited to $j_max hexes"}

                    [while]
                        {VARIABLE_NUM_LESS_THAN j $j_max}
                        [have_unit]
                            id=$NPC_birds[$i].id
                            side=$NPC_birds[$i].side
                        [/have_unit]
                        [do]
                            {LOG_IFTU "<NPC> step $j of $j_max|..."}

                            # Get an adjacent location in that random direction
                            [store_locations]
                                [filter_adjacent_location]
                                    adjacent="-$random"
                                    x,y="$NPC_birds[$i].x","$NPC_birds[$i].y"
                                [/filter_adjacent_location]
                                variable="temp_NPC_target"
                            [/store_locations]

                            {LOG_IFTU "<NPC> adjacent hex at $random from ($NPC_birds[$i].x|,$NPC_birds[$i].y|): ($temp_NPC_target.x|,$temp_NPC_target.y|)"}

                            #
                            # OK, got it. Prepare for next recursion cycle and extend the MUF path string
                            #
                            {VARIABLE NPC_temp_movepath_x "$NPC_temp_movepath_x|,$temp_NPC_target.x|"}
                            {VARIABLE NPC_temp_movepath_y "$NPC_temp_movepath_y|,$temp_NPC_target.y|"}

                            {VARIABLE NPC_birds[$i].x      $temp_NPC_target.x}
                            {VARIABLE NPC_birds[$i].y      $temp_NPC_target.y}

                            {CLEAR_VARIABLE temp_NPC_target}

                            #
                            # Ensure default AI cannot move the unit at the end of
                            # this code.
                            #
                            {VARIABLE_DECREMENT NPC_birds[$i].moves}
                            {VARIABLE_INCREMENT j}
                        [/do]
                    [/while]

                    {LOG_IFTU "<NPC> passed movement loop"}

                    #
                    # Now move the bird
                    #
                    [kill]
                        id=$NPC_birds[$i].id
                        side=$NPC_birds[$i].side
                        fire_event,animate=no,no
                    [/kill]

                    [move_unit_fake]
                        gender=$NPC_birds[$i].gender
                        variation=$NPC_birds[$i].variation
                        type=$NPC_birds[$i].type
                        side=$NPC_birds[$i].side
                        x=$NPC_temp_movepath_x
                        y=$NPC_temp_movepath_y
                    [/move_unit_fake]

                    {LOG_IFTU "<NPC> set facing for bird $NPC_birds[$i].id to $random"}

                    {VARIABLE NPC_birds[$i].facing $random}

                    [unstore_unit]
                        # In case the coordinates were screwed up in the process by a design flaw in this code,
                        # make sure we don't kill any existing units by unstoring in an used hex
                        find_vacant=yes
                        variable=NPC_birds[$i]
                    [/unstore_unit]

                    [redraw][/redraw]

                    {CLEAR_VARIABLE "j, j_max, random"                                }
                    {CLEAR_VARIABLE "NPC_temp_movepath_x, NPC_temp_movepath_y"}
                [/then]
            [/if]

            {LOG_IFTU "<NPC> exiting fake AI procedure: $NPC_birds[$i].id (side $NPC_birds[$i].side|)"}
        {NEXT i}

        {CLEAR_VARIABLE NPC_birds}
    {__NPC_END_SIDE_EVENT}
#enddef
