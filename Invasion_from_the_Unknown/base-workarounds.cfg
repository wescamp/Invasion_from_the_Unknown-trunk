#textdomain wesnoth-Invasion_from_the_Unknown
# $Id: base-workarounds.cfg 3346 2009-01-18 23:13:08Z shikadilord $
#
############################ ENGINE BUGS WORKAROUNDS ###########################
#
# WARNING: this is EARLY! Don't use any campaign-specific macros here.
# All we have is a few helper macros to be used on this file only. Those
# helpers must be surrounded in double underscores ("uglified"). Example:
#
#   #define __FOO__
#       {LOG ("internal foo!")}
#   #enddef
#
#   #define __BAR__
#       {LOG ("internal bar!")}
#   #enddef
#
# The only macro that is allowed to be non-uglified is the essential WORKAROUNDS
# macro.
#
# Those trying to learn WML from this campaign should definitively NOT read this
# file at all!
#

# Internal ERROR
#define __WA_ERROR__ _MSG
    {ERROR      ("[IftU - engine workaround] "+{_MSG})}
#enddef
# Internal WARNING
#define __WA_WARNING__ _MSG
    {WARNING    ("[IftU - engine workaround] "+{_MSG})}
#enddef
# Internal LOG
#define __WA_LOG__ _MSG
    {LOG        ("[IftU - engine workaround] "+{_MSG})}
#enddef
# Internal DEBUG (not available before Wesnoth 1.5.8)
#ifdef DEBUG
#define __WA_DEBUG__ _MSG
    {DEBUG      ("[IftU - engine workaround] "+{_MSG})}
#enddef
#else
#define __WA_DEBUG__ _MSG
    {__WA_LOG__ ({_MSG})}
#enddef
#endif
# /* DEBUG */

#define __INTERNAL_WORKAROUND_158_FROM_157__ _CID _PROXY_T _NATURAL_T _PORTRAIT_SPEC
    {__WA_LOG__ ("probing unit: '$area158.id|'")}

    [store_unit]
        [filter]
            side=1
            id={_CID}
            type={_PROXY_T}
        [/filter]
        variable=area158
        kill=yes
    [/store_unit]

    [if]
        [variable]
            name=area158.length
            numerical_equals=1
        [/variable]
        [then]
            {VARIABLE area158.type ({_NATURAL_T})}
            {VARIABLE area158.profile ({_PORTRAIT_SPEC})}
            {__WA_ERROR__ ("switched portrait proxy off for '$area158.id|' to use 1.5.8 portrait heuristics")}

            [unstore_unit]
                variable=area158
            [/unstore_unit]
        [/then]
    [/if]

    {CLEAR_VARIABLE area158}
#enddef

#define __INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ _CHARACTER_ID _UNIT_TYPE_ID _PORTRAIT
    [literal]
        proxy="{_CHARACTER_ID} {_UNIT_TYPE_ID}"
        nonproxy="{_UNIT_TYPE_ID}"
        cid="{_CHARACTER_ID}"
        profile="{_PORTRAIT}"
    [/literal]
#enddef

#define __WORKAROUND_158_FROM_157__
    [event]
        name=prestart
        [if]
            [variable]
                name=workaround_158_applied
                boolean_not_equals=yes
            [/variable]
            [then]
                [set_variables]
                    name="__workaround_158_tab__"
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Galas)      (Elvish Fighter)      (portraits/galas.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Galas)      (Elvish Captain)      (portraits/galas.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Galas)      (Elvish Hero)         (portraits/galas.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Galas)      (Elvish Marshal)      (portraits/galas.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Galas)      (Elvish Champion)     (portraits/galas.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Mal Keshar) (Ancient Lich)        (portraits/mal-keshar.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Erathan)    (Aragwaith Strongbow) (portraits/erathan.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Erathan)    (Aragwaith Greatbow)  (portraits/erathan.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Erathan)    (Aragwaith Slayer)    (portraits/erathan.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Igor)       (Wolf Rider)          (portraits/igor.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Igor)       (Goblin Pillager)     (portraits/igor.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Igor)       (Goblin Knight)       (portraits/igor.png)}
                    {__INTERNAL_WORKAROUND_158_FROM_157_DEFINE__ (Igor)       (Direwolf Rider)      (portraits/igor.png)}
                [/set_variables]

                {FOREACH __workaround_158_tab__ __k__}
                    {__INTERNAL_WORKAROUND_158_FROM_157__
                        ($__workaround_158_tab__[$__k__].cid)
                        ($__workaround_158_tab__[$__k__].proxy)
                        ($__workaround_158_tab__[$__k__].nonproxy)
                        ($__workaround_158_tab__[$__k__].profile)
                    }
                {NEXT __k__}
                {CLEAR_VARIABLE __workaround_158_tab__}

                {VARIABLE workaround_158_applied yes}
            [/then]
        [/if]
    [/event]
#enddef

#
# EARLY HACK: this is embedded into {MAP} later so that these
# workarounds are processed before anything else in a scenario.
#
# This macro will stay, empty or not, until IftU is branched for
# Wesnoth 1.6; then it will have fulfilled its purpose.
#
#define WORKAROUNDS
     {__WORKAROUND_158_FROM_157__}
#enddef
