#textdomain wesnoth-Invasion_from_the_Unknown

#define SIGNPOST _X _Y _TEXT
    [item]
        x,y={_X},{_Y}
        image=scenery/signpost.png
    [/item]

    [event]
        name=moveto
        [filter]
            x,y={_X},{_Y}
            side=1
        [/filter]
        {ALLOW_UNDO}
        {REDRAW}
        [message]
            speaker=narrator
            image="scenery/signpost.png"
            message={_TEXT}
        [/message]
    [/event]
#enddef

#define CHEST_OF_GOLD _AMOUNT _X _Y
    [item]
        x,y={_X},{_Y}
        image=items/chest-plain-closed.png
    [/item]

    [event]
        name=moveto
        [filter]
            x,y={_X},{_Y}
            side=1
        [/filter]
        [sound]
            name=open-chest.wav
        [/sound]
        [removeitem]
            x,y={_X},{_Y}
        [/removeitem]
        [item]
            x,y={_X},{_Y}
            image=items/chest-plain-open.png
        [/item]
        {REDRAW}
        {VARIABLE temp_gold_found ({_AMOUNT})}
        [message]
            speaker=unit
            message= _ "Hey! I just found $temp_gold_found pieces of gold in this chest!"
        [/message]
        {RETRIEVE_GOLD {_AMOUNT} }
        {CLEAR_VARIABLE temp_gold_found}
    [/event]
#enddef

#define ITEM_TOUCHPLATE _X _Y
    [item]
        x,y={_X},{_Y}
        halo=items/touchplate-5.png:1600,items/touchplate-10.png:10,items/touchplate-15.png:10,items/touchplate-20.png:10,items/touchplate-25.png:10,items/touchplate-30.png:10,items/touchplate-35.png:10,items/touchplate-40.png:10,items/touchplate-45.png:10,items/touchplate-50.png:10,items/touchplate-55.png:10,items/touchplate-60.png:10,items/touchplate-65.png:10,items/touchplate-70.png:10,items/touchplate-75.png:10,items/touchplate-80.png:10,items/touchplate-85.png:10,items/touchplate-90.png:10,items/touchplate-95.png:10,items/touchplate-100.png:640,items/touchplate-95.png:10,items/touchplate-90.png:10,items/touchplate-85.png:10,items/touchplate-80.png:10,items/touchplate-75.png:10,items/touchplate-70.png:10,items/touchplate-65.png:10,items/touchplate-60.png:10,items/touchplate-55.png:10,items/touchplate-50.png:10,items/touchplate-45.png:10,items/touchplate-40.png:10,items/touchplate-35.png:10,items/touchplate-30.png:10,items/touchplate-25.png:10,items/touchplate-20.png:10,items/touchplate-15.png:10,items/touchplate-10.png:10
    [/item]
#enddef

# Shared graphics declaration for a crystal glyph that does nothing; use OBJ_*_GLYPH macros
# if you want an interactive object, instead.

# wmlindent: start ignoring
#define __HALO_CRYSTAL_GLYPH
halo/elven/shyde-stationary-halo1.png:150,halo/elven/shyde-stationary-halo2.png:150,halo/elven/shyde-stationary-halo3.png:150,halo/elven/shyde-stationary-halo4.png:150,halo/elven/shyde-stationary-halo5.png:150,halo/elven/shyde-stationary-halo6.png:150 #enddef
# wmlindent: stop ignoring

#define ITEM_CRYSTAL_GLYPH _X _Y
    [item]
        x,y={_X},{_Y}
        image=items/crystal-glyph.png
        halo={__HALO_CRYSTAL_GLYPH}
    [/item]
#enddef
#define ITEM_CRYSTAL_GLYPH_INVINCIBILITY _X _Y
    [item]
        x,y={_X},{_Y}
        image=items/crystal-glyph-invincibility.png
        halo={__HALO_CRYSTAL_GLYPH}
    [/item]
#enddef
#define ITEM_CRYSTAL_GLYPH_MESSAGE _X _Y
    [item]
        x,y={_X},{_Y}
        image=items/crystal-glyph-message.png
        halo={__HALO_CRYSTAL_GLYPH}
    [/item]
#enddef

#define OBJ_HEALING_GLYPH _X _Y
    {ITEM_CRYSTAL_GLYPH {_X} {_Y} }
    [event]
        name=prestart
        [set_variable]
            name=glyph_show_details
            value=yes
        [/set_variable]
        [set_variable]
            name=glyph_at_{_X}_{_Y}_used
            value=no
        [/set_variable]
    [/event]
    [event]
        name=victory
        [clear_variable]
            name=glyph_show_details
        [/clear_variable]
        [clear_variable]
            name=glyph_text
        [/clear_variable]
        [clear_variable]
            name=glyph_at_{_X}_{_Y}_used
        [/clear_variable]
    [/event]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            x,y={_X},{_Y}
        [/filter]
        [allow_undo]
        [/allow_undo]
        [redraw]
        [/redraw]
        [if]
            [variable]
                name=glyph_at_{_X}_{_Y}_used
                boolean_equals=no
            [/variable]
            [then]
                [if]
                    [variable]
                        name=glyph_show_details
                        boolean_equals=yes
                    [/variable]
                    [then]
                        [set_variable]
                            name=glyph_text
                            value=_"Do you want to be healed?
 
This magic glyph will completely restore this unit's health, also unslowing and removing poison from it, if applicable."+"
 
`{UI_COLOR_FOOTNOTE}"+_"Note: the glyph can do this only once, and when done it will fade out."
                        [/set_variable]
                        [set_variable]
                            name=glyph_show_details
                            value=no
                        [/set_variable]
                    [/then]
                    [else]
                        [set_variable]
                            name=glyph_text
                            value=_"Do you want to be healed?"+"
 
`{UI_COLOR_FOOTNOTE}"+_"Note: the glyph can do this only once, and when done it will fade out."
                        [/set_variable]
                    [/else]
                [/if]
                [message]
                    speaker=narrator
                    caption= _ "Crystal Glyph of Health"
                    image=items/crystal-glyph.png
                    message=$glyph_text
                    [option]
                        message={STR_YES}
                        [command]
                            [object]
                                id=healing_glyph_at_{_X}_{_Y}
                                cannot_use_message=null
                                name= _ "Crystal Glyph of Health"
                                image=items/crystal-glyph.png
                                description= _ "The unit is fully healed, cured and unslowed."
                                [filter]
                                    side=1
                                    x,y={_X},{_Y}
                                [/filter]
                                [then]
                                    [if]
                                        {VARIABLE_LEXICAL_EQUALS unit.gender "female"}
                                        [then]
                                            {VARIABLE temp_glyph_txt _"female^healed"}
                                        [/then]
                                        [else]
                                            {VARIABLE temp_glyph_txt _"healed"}
                                        [/else]
                                    [/if]
                                    [removeitem]
                                        x,y={_X},{_Y}
                                    [/removeitem]
                                    [terrain]
                                        x,y={_X},{_Y}
                                        terrain=Uu
                                    [/terrain]
                                    [set_variable]
                                        name=glyph_at_{_X}_{_Y}_used
                                        value=yes
                                    [/set_variable]
                                    [sound]
                                        name=heal.wav
                                    [/sound]
                                    [set_variable]
                                        name=unit.status.poisoned
                                        value=no
                                    [/set_variable]
                                    [set_variable]
                                        name=unit.status.slowed
                                        value=no
                                    [/set_variable]
                                    [set_variable]
                                        name=unit.status.stoned
                                        value=no
                                    [/set_variable]
                                    [set_variable]
                                        name=unit.moves
                                        value=0
                                    [/set_variable]
                                    [unstore_unit]
                                        variable=unit
                                        text=$temp_glyph_txt
                                        {COLOR_HEAL}
                                    [/unstore_unit]
                                    [redraw]
                                    [/redraw]
                                    {CLEAR_VARIABLE temp_glyph_txt}
                                [/then]
                                [effect]
                                    apply_to=hitpoints
                                    heal_full=yes
                                [/effect]
                            [/object]
                        [/command]
                    [/option]
                    [option]
                        message={STR_NO}
                    [/option]
                [/message]
            [/then]
        [/if]
    [/event]
#enddef

#################################### BASE OBJECTS CODE ####################################

#define PICK_UP_QUIET _IMG _X _Y _OBJECT_CODE_AND_ACTIONS
    [event]
        name=victory
        [clear_variable]
            name=pickups.generic_flag_{_X}_{_Y}
        [/clear_variable]
    [/event]
    [item]
        image={_IMG}
        x={_X}
        y={_Y}
    [/item]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            x={_X}
            y={_Y}
        [/filter]
        {REDRAW}
        [if]
            [variable]
                boolean_equals=no
                name=pickups.generic_flag_{_X}_{_Y}
            [/variable]
            [then]
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    message= _ "Do you want this unit to pick up this item?"
                    [option]
                        message={STR_YES}
                        [command]
                            {_OBJECT_CODE_AND_ACTIONS}
                            [+object]
                                [+then]
                                    # Mark object as picked-up; won't happen if the object's filter
                                    # doesn't match primary_unit
                                    [set_variable]
                                        name=pickups.generic_flag_{_X}_{_Y}
                                        value="yes"
                                    [/set_variable]
                                [/then]
                            [/object]
                        [/command]
                    [/option]
                    [option]
                        message={STR_NO}
                        [command]
                            {ALLOW_UNDO}
                        [/command]
                    [/option]
                [/message]
            [/then]
        [/if]
    [/event]
#enddef

#define PICK_UP _IMG _X _Y _VERBOSE_MSG _OBJECT_CODE_AND_ACTIONS
    [event]
        name=victory
        [clear_variable]
            name=pickups.generic_flag_{_X}_{_Y}
        [/clear_variable]
    [/event]
    [item]
        image={_IMG}
        x={_X}
        y={_Y}
    [/item]
    [event]
        name=moveto
        first_time_only=no
        [filter]
            side=1
            x={_X}
            y={_Y}
        [/filter]
        {REDRAW}
        [if]
            [variable]
                boolean_equals=no
                name=pickups.generic_flag_{_X}_{_Y}
            [/variable]
            [then]
                [message]
                    speaker=unit
                    message={_VERBOSE_MSG}
                [/message]
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    message= _ "Do you want this unit to pick up this item?"
                    [option]
                        message={STR_YES}
                        [command]
                            {_OBJECT_CODE_AND_ACTIONS}
                            [+object]
                                [+then]
                                    # Mark object as picked-up; won't happen if the object's filter
                                    # doesn't match primary_unit
                                    [set_variable]
                                        name=pickups.generic_flag_{_X}_{_Y}
                                        value="yes"
                                    [/set_variable]
                                [/then]
                            [/object]
                        [/command]
                    [/option]
                    [option]
                        message={STR_NO}
                        [command]
                            {ALLOW_UNDO}
                        [/command]
                    [/option]
                [/message]
            [/then]
        [/if]
    [/event]
#enddef

################################# INDIVIDUAL OBJECTS CODE #################################
# NOTE: duration=level is the only case that allows id= to make sense and be useful

#define HOLY_WATER X Y
    {PICK_UP (items/holy-water.png) ({X}) ({Y})
    ( _ "Holy water! I have read that our ancestors used to put in on their weapons for fighting undead, as it is imbued with arcane energy, the greatest bane of those unnatural creatures. Of course, it could be used against our people as well - but it is fortunate that undead horrors are not capable of bearing its power. That is probably why they hid it in this secret chamber.")
    (
        [object]
            id=holywater_{X}_{Y}
            image=items/holy-water.png
            duration=level

            name={STR_HOLY_WATER}
            description={STR_HOLY_WATER_MATCHING_DESCRIPTION}
            cannot_use_message={STR_HOLY_WATER_NONMATCHING_DESCRIPTION}
            [filter]
                x={X}
                y={Y}
                [not]
                    [filter_wml]
                        [status]
                            not_living=yes
                        [/status]
                    [/filter_wml]
                [/not]
                [not]
                    race=bats
                [/not]
            [/filter]
            [then]
                [removeitem]
                    x,y={X},{Y}
                [/removeitem]
            [/then]
            [effect]
                apply_to=attack
                range=melee
                set_type=arcane
            [/effect]
        [/object]
    )}
#enddef

#define RING_SPEED X Y
    {PICK_UP (items/ring-gold.png) ({X}) ({Y})
    ( _ "A gold ring, and there is a inscription on it. 'You who take this ring will be swifter and more graceful, no matter what weight you carry on your back.' This would be useful here, since we are not very used to moving in these rough, dark caves.")
    (
        [object]
            image=items/ring-gold.png
            duration=forever

            name= _ "Ring of Swiftness"
            description= _ "This ring will grant the bearer swift movement, increasing its maximum movement by 2 units per turn."
            [filter]
                x={X}
                y={Y}
                [not]
                    [filter_wml]
                        [status]
                            not_living=yes
                        [/status]
                    [/filter_wml]
                [/not]
            [/filter]
            [then]
                [removeitem]
                    x,y={X},{Y}
                [/removeitem]
            [/then]
            [effect]
                apply_to=movement
                increase=2
            [/effect]
        [/object]
    )}
#enddef

#define POISONOUS_BOW X Y
    {PICK_UP (items/bow-poisonous.png) ({X}) ({Y})
    ( _ "An enchanted bow! I have read that ancient armies used to hire powerful warlocks to grant mundane weapons special powers such as poisoning without need of preparing them beforehand, which is the main lack of those dumb orcish slayers. Well, this one seems to have such a power, judging by the fine inscription on it.")
    (
        [object]
            image=attacks/bow-orcish.png
            duration=forever

            name= _ "Poisonous Bow"
            description= _ "This bow has been enchanted, and it will grant every arrow you shoot with it the poison special."
            cannot_use_message= _ "I am not suited to use this weapon! Let someone else pick it up!"
            [filter]
                x,y={X},{Y}
                type=Skeleton Archer,Revenant,Bone Shooter,Death Knight,Death Baron,Draug,Banebow,Elvish Archer,Elvish Marksman,Elvish Sharpshooter,Elvish Ranger,Elvish Avenger,Elvish Hero,Elvish Champion,Naga Fighter,Naga Warrior,Naga Myrmidon
            [/filter]
            [then]
                [removeitem]
                    x,y={X},{Y}
                [/removeitem]
                [message]
                    speaker=narrator
                    image="wesnoth-icon.png"
                    message= _ "The unit picks up the bow, and immediately feels a chilling energy coming from it, flowing to their body. Albeit it looks like an ordinary bow, they take an ordinary arrow and shoot it at a snake wandering nearby, dealing great damage to it, and apparently poisoning it too."
                [/message]
                [message]
                    speaker=Galas
                    message= _ "We have never used poison on our weapons, or allowed its usage, but I guess this situation will require it."
                [/message]
            [/then]
            [effect]
                apply_to=new_attack
                name=poisonous bow
                description= _ "poisonous bow"
                icon=attacks/bow-orcish.png
                type=pierce
                range=ranged
                damage=11
                number=3
                [specials]
                    {WEAPON_SPECIAL_POISON}
                [/specials]
            [/effect]
            [effect]
                apply_to=new_animation
                [attack_anim]
                    [filter_attack]
                        name=poisonous bow
                    [/filter_attack]
                    [missile_frame]
                        begin=-150
                        end=0
                        image="projectiles/missile-n.png"
                        image_diagonal="projectiles/missile-ne.png"
                    [/missile_frame]
                    [if]
                        hits=yes
                        [frame]
                            begin=-375
                            end=-300
                            image=$unit.image
                            sound=bow.ogg
                        [/frame]
                    [/if]
                    [else]
                        hits=no
                        [frame]
                            begin=-375
                            end=-300
                            image=$unit.image
                            sound=bow-miss.ogg
                        [/frame]
                    [/else]
                    [frame]
                        begin=-300
                        end=20
                        image=$unit.image
                    [/frame]
                [/attack_anim]
            [/effect]
        [/object]
    )}
#enddef

#define OBJ_VOID_ARMOR X Y ID
    {PICK_UP (items/armor.png) ({X}) ({Y})
    ( _ "How could this beautiful armor be abandoned in these deep caves? I suppose someone dropped it during an evacuation or such, since it looks like it hasn't been worn before - well preserved nevertheless. It would fit an elvish or undead warrior of ours fine. We are rather short on battle gear and I don't think its original owner would mind if we borrow and use it.")
    (
        [object]
            id={ID}
            name= _ "Void Armor"
            image="icons/void-armor.png"
            description= _ "A beautiful chest plate crafted from shimmering black steel, the Void Armor is virtually impenetrable to physical weapons!"
            cannot_use_message= _ "Only a powerful warrior may don this armor!"
            duration=forever
            [filter]
                side=1
                x,y={X},{Y}
                type=Elvish Fighter,Elvish Captain,Elvish Hero,Elvish Marshal,Elvish Champion,Elvish Ranger,Elvish Avenger,Skeleton,Deathblade,Revenant,Draug,Death Baron,Death Knight,Skeleton Rider,Bone Knight
            [/filter]
            [then]
                [removeitem]
                    x,y={X},{Y}
                [/removeitem]
                [message]
                    speaker=narrator
                    image="wesnoth-icon.png"
                    message= _ "You struggle to lift and don the heavy plate. Once worn, however, it is amazingly comfortable. You have increased resistance to all physical damage!"
                [/message]

                [store_unit]
                    [filter]
                        x,y={X},{Y}
                    [/filter]
                    kill=yes
                    variable=void_armor_taker
                [/store_unit]

                [set_variables]
                    name=void_armor_taker.modifications.trait
                    mode=append
                    [value]
                        id=void_armor
                        name= _ "void armor"
                        description= _ "The Void Armor grants the following resistances:
blade:  50%
pierce: 50%
impact: 60%
fire:  +10%"
                    [/value]
                [/set_variables]

                [unstore_unit]
                    variable=void_armor_taker
                    find_vacant=no
                [/unstore_unit]
                {CLEAR_VARIABLE void_armor_trait}
                {CLEAR_VARIABLE void_armor_trait_i}
                {CLEAR_VARIABLE void_armor_taker}
            [/then]
            #
            # Set physical resistance to 50/50/60
            #
            [effect]
                apply_to=resistance
                replace=true
                [resistance]
                    blade=50
                    pierce=50
                    impact=40
                [/resistance]
            [/effect]
            #
            # Increase fire resistance by 10%
            #
            [effect]
                apply_to=resistance
                [resistance]
                    fire=-10
                [/resistance]
            [/effect]
        [/object]
    )}
#enddef
