#textdomain wesnoth-Invasion_from_the_Unknown

#define HIVE_SPAWN_SPAWN_INTERNAL TYPE_LIST SIDE X Y
    {VARIABLE_RANDOM hivespawn_gen.type                 ({TYPE_LIST})                      }
    {VARIABLE_RANDOM hivespawn_gen.facing               "{DIRECTION_ALL}"                  }
    {VARIABLE_RANDOM hivespawn_gen.ai_vars.guard_radius  {DARKHIVE_DRONE_AI_RANDOM_RADIUS} }

    [set_variables]
        name=hivespawn_gen
        mode=merge
        [value]
            id=hivespawn_{X}_{Y}
            side={SIDE}
            ai_special=guardian
            formula="{INCLUDE_LOCAL /ai/formula/darkhive-drone.ai}"
            x,y={X},{Y}
            random_traits=yes
            [ai_vars]
                guard_loc="loc({X},{Y})"
            [/ai_vars]
        [/value]
    [/set_variables]

    {LOG_IFTU "hive spawn: loc=($hivespawn_gen.x|, $hivespawn_gen.y|) type=$hivespawn_gen.type facing=$hivespawn_gen.facing ai_vars.guard_radius=$hivespawn_gen.ai_vars.guard_radius"}

    [unstore_unit]
        find_vacant=yes
        variable=hivespawn_gen
    [/unstore_unit]

    {CLEAR_VARIABLE hivespawn_gen}
#enddef

#define HIVE_SPAWN_SPAWN _TYPES _SIDE _X _Y
    [if]
        [variable]
            name="__uu_shaxthal_in_surface"
            boolean_not_equals="yes"
        [/variable]
        [then]
            {HIVE_SPAWN_SPAWN_INTERNAL ({_TYPES}) ({_SIDE}) ({_X}) ({_Y})}
        [/then]
        [else]
            {HIVE_SPAWN_SPAWN_INTERNAL ({_TYPES}) ({_SIDE}) ({_X}) ({_Y})}
            [+set_variables]
                [+value]
                    variation=surface
                [/value]
            [/set_variables]

            {LOG_IFTU "applied surface variation"}
        [/else]
    [/if]
#enddef

#define HIVE_SPAWN_ONCE_POINT _TYPES _SIDE _X _Y
    [event]
        name=prestart
        {LOG_IFTU "setting up one-time spawn point at ({_X},{_Y})..."}

        {HIVE_SPAWN_SPAWN ({_TYPES}) ({_SIDE}) ({_X}) ({_Y})}
    [/event]
#enddef

#define HIVE_RESPAWN_EVENTS TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT
    [event]
        name=hive respawn {X} {Y}
        first_time_only=no
        {HIVE_SPAWN_SPAWN ({TYPES}) ({SIDE}) ({X}) ({Y})}
    [/event]

    [event]
        name=die
        first_time_only=no
        [filter]
            id=hivespawn_{X}_{Y}
        [/filter]

        [set_variable]
            name=chance_to_continue
            rand=0..100
        [/set_variable]

        [set_variable]
            name=chance_to_continue
            modulo=23
        [/set_variable]

        [set_variable]
            name=respawn_flag
            value={RESPAWN}
        [/set_variable]

        [if]
            [variable]
                name=chance_to_continue
                numerical_not_equals=0
            [/variable]
            [and]
                [variable]
                    name=respawn_flag
                    boolean_equals=yes
                [/variable]
            [/and]
            [then]
                {LOG_IFTU "respawn point ({X}, {Y}) reactivating in {RESPAWN_TIMEOUT} turns"}

                #                 [set_variable]
                #                     name=respawn_event_turn
                #                     value={RESPAWN_TIMEOUT}
                #                 [/set_variable]
                #
                #                 [set_variable]
                #                     name=respawn_event_turn
                #                     add=$turn_number
                #                 [/set_variable]

                #
                # Generate a respawn event dynamically
                #
                [set_variables]
                    name=respawn_event_WML
                    [value]
                        name="turn $($turn_number + {RESPAWN_TIMEOUT})"
                        [fire_event]
                            name=hive respawn {X} {Y}
                        [/fire_event]
                    [/value]
                [/set_variables]

                [insert_tag]
                    name=event
                    variable=respawn_event_WML
                [/insert_tag]

                [clear_variable]
                    name=respawn_event_WML #,respawn_event_turn
                [/clear_variable]
            [/then]
            [else]
            [/else]
        [/if]
        [clear_variable]
            name=chance_to_continue,respawn_flag
        [/clear_variable]
    [/event]
#enddef

# Variant of {HIVE_SPAWN_POINT} that should be called from inside an event; useful for
# creating spawn points only when required
#define PUT_HIVE_SPAWN_POINT TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT
    {LOG_IFTU "setting up respawn point at ({X},{Y})..."}

    {HIVE_SPAWN_SPAWN ({TYPES}) ({SIDE}) ({X}) ({Y})}

    {HIVE_RESPAWN_EVENTS ({TYPES}) ({SIDE}) ({X}) ({Y}) ({RESPAWN}) ({RESPAWN_TIMEOUT})}

    #     [fire_event]
    #         name=hive respawn {X} {Y}
    #     [/fire_event]
#enddef

#define HIVE_SPAWN_POINT TYPES SIDE X Y RESPAWN RESPAWN_TIMEOUT
    [event]
        name=prestart
        {LOG_IFTU "setting up initial respawn point at ({X},{Y})..."}

        {HIVE_SPAWN_SPAWN ({TYPES}) ({SIDE}) ({X}) ({Y})}
    [/event]

    {HIVE_RESPAWN_EVENTS ({TYPES}) ({SIDE}) ({X}) ({Y}) ({RESPAWN}) ({RESPAWN_TIMEOUT})}
#enddef
